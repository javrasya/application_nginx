upstream <%= @resource.application.name %> {
  <% unless @application_socket.empty? -%>
    <% @application_socket.each do |socket_name| -%>
  server unix:<%= socket_name %>;
    <% end -%>
  <% end -%>
  <% @hosts.each do |node| %>
    server <%= node %>;
  <% end %>
}


<% @resource.upstreams.each do |upstream| -%>
upstream <%= upstream.fetch(:name)%> {
  <% upstream.fetch(:servers).each do |upstream_server| -%>
  server <%= upstream_server %>;
  <% end -%>
  keepalive <%= upstream.fetch(:keepalive) { @resource.upstream_keepalive } %>;
}

<% end -%>

server {
  listen <%= @resource.port %>;
  server_name <%= @resource.server_name.is_a?(Array) ? @resource.server_name.join(' ') : @resource.server_name %>;
  <% if @resource.ssl %>
  ssl on;
  ssl_certificate <%= @resource.ssl_certificate %>;
  ssl_certificate_key <%= @resource.ssl_certificate_key %>;
  <% end %>
  <% @resource.static_files.each do |url, path| %>
  location <%= url %> {
    alias <%= path %>;
  }
  <% end %>
  location / {
    proxy_pass http://<%= @resource.application.name %>;
    <% if @resource.set_host_header %>
    proxy_set_header   Host             $host;
    proxy_set_header   X-Real-IP        $remote_addr;
    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
    <% end %>
  }

 <% @resource.locations.each do |location| -%>
  location <%= location.fetch(:path) %> {
    <%= location.fetch(:directives).join("\n\s\s\s\s") %>
  }
  <% end %>

}
